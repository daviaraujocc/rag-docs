{{- if .Values.postgres.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-{{ .Values.postgres.name }}
  labels:
    {{- include "rag-docs.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgres
    {{- with .Values.commonLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  serviceName: {{ .Release.Name }}-{{ .Values.postgres.name }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "rag-docs.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgres
  template:
    metadata:
      labels:
        {{- include "rag-docs.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgres
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          args:
            {{- toYaml .Values.postgres.args | nindent 12 }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          env:
            {{- range $key, $value := .Values.postgres.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgres.env.POSTGRES_USER | quote }}
            initialDelaySeconds: 30
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgres.env.POSTGRES_USER | quote }}
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 5
      volumes:
        - name: init-scripts
          configMap:
            name: {{ .Release.Name }}-postgres-init
  {{- if .Values.postgres.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        {{- with .Values.postgres.persistence.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.postgres.persistence.storageClass }}
        {{- if (eq "-" .Values.postgres.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.postgres.persistence.storageClass }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.postgres.persistence.size }}
  {{- end }}
{{- end }}
